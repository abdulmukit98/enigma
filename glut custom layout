/*
 * GLUT Shapes Demo
 *
 * Written by Nigel Stewart November 2003
 *
 * This program is test harness for the sphere, cone
 * and torus shapes in GLUT.
 *
 * Spinning wireframe and smooth shaded shapes are
 * displayed until the ESC or q key is pressed.  The
 * number of geometry stacks and slices can be adjusted
 * using the + and - keys.
 */
#include<windows.h>
#ifdef __APPLE__
#include <GLUT/glut.h>
#else
#include <GL/glut.h>
#endif
#include<bits/stdc++.h>
#include <stdlib.h>

static int slices = 16;
static int stacks = 16;

/* GLUT callback Handlers */


static void display(void)
{
    glClear(GL_COLOR_BUFFER_BIT );


    glColor3f(0,1,1);
    glBegin(GL_LINES);
        glVertex2d(0,-1);
        glVertex2d(0,1);
        glVertex2d(-1,0);
        glVertex2d(1,0);

    glEnd();

    glColor3d(1,0,0);
    glBegin(GL_LINES);
        glVertex2d(-.9,-.8);
        glVertex2d(0.5,0.9);
        glVertex2d(0.5,0.9);
        glVertex2d(0.5,-0.8);
        glVertex2d(0.5,-0.8);
        glVertex2d(-0.9,-0.8);
    glEnd();

    double PI = 3.14166;
    glColor3d(0,1,0);
    glBegin(GL_POLYGON);
        for(double i = 0; i < 2 * PI; i += PI / 50) //<-- Change this Value
            glVertex2d(-0.5+cos(i) * 0.3, 0.6+sin(i) * 0.3);
    glEnd();
    glFlush();
    glutSwapBuffers();
}


static void key(unsigned char key, int x, int y)
{
    switch (key)
    {
        case 27 :
        case 'q':
            exit(0);
            break;

        case '+':
            slices++;
            stacks++;
            break;

        case '-':
            if (slices>3 && stacks>3)
            {
                slices--;
                stacks--;
            }
            break;
    }

    glutPostRedisplay();
}

/* Program entry point */

int main(int argc, char *argv[])
{
    glutInit(&argc, argv);
    glutInitWindowSize(800,600);
   // glutInitWindowPosition(10,10);
    glutInitDisplayMode(GLUT_RGB | GLUT_DOUBLE | GLUT_DEPTH);

    glutCreateWindow("GLUT Shapes");

    //glutReshapeFunc(resize);
    glutDisplayFunc(display);
    glutKeyboardFunc(key);

    glutMainLoop();

    return EXIT_SUCCESS;
}
